"""
Utilities/etc for dealing with Splunk running on Amazon Web Services (AWS).
"""
# NOTE: This file is auto-formatted with black

from __future__ import annotations
import enum
import sys
from typing import Optional

import requests
import splunk.clilib.cli_common as cli_common
from typing_extensions import Final  # Remove in Python >= 3.9

assert sys.version_info > (3, 7)


AWS_EC2_INSTANCE_IDENTITY_QUERY: Final[
    str
] = "http://169.254.169.254/latest/dynamic/instance-identity/document"
AWS_IMDS_V2_TOKEN_QUERY: Final[str] = "http://169.254.169.254/latest/api/token"


class AwsImdsVersion(enum.Enum):
    v1 = "v1"
    v2 = "v2"
    DEFAULT_VERSION = v1

    @staticmethod
    def from_str(s: str) -> AwsImdsVersion:
        return AwsImdsVersion.__members__.get(s.lower(), AwsImdsVersion.DEFAULT_VERSION)


def get_aws_imds_version() -> AwsImdsVersion:
    """Determine which AWS IMDS service version splunkd is using.

    Note:
        Don't call unless actually running on AWS.

    Returns:
        AwsImdsVersion enum.
    """
    try:
        imds_version = cli_common.getOptConfKeyValue("server", "imds", "imds_version")

        return AwsImdsVersion.from_str(imds_version)
    except Exception as ex:
        return AwsImdsVersion.DEFAULT_VERSION


# General util for getting ec2_region
def get_ec2_region() -> Optional[str]:
    """Return region of current EC2 instance if running on AWS.

    Returns:
        AWS region, e.g. "us-west-2", or None if not running or unable to
        determine region.
    """
    instance_region = None
    try:
        imds_version = get_aws_imds_version()
        if imds_version == AwsImdsVersion.v1:
            instance_region = requests.get(AWS_EC2_INSTANCE_IDENTITY_QUERY).json()["region"]
        elif imds_version == AwsImdsVersion.v2:
            token = requests.put(
                AWS_IMDS_V2_TOKEN_QUERY, headers={"X-aws-ec2-metadata-token-ttl-seconds": "300"}
            ).text
            instance_region = requests.get(
                AWS_EC2_INSTANCE_IDENTITY_QUERY, headers={"X-aws-ec2-metadata-token": token}
            ).json()["region"]
    except Exception as ex:
        return None
    return instance_region
